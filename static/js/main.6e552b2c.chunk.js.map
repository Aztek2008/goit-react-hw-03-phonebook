{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter.jsx","components/ContactList/ContactList.jsx","components/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","styles","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","id","uuidv4","this","type","onChange","placeholder","autoFocus","format","mask","Component","Filter","onChangeFilter","ContactList","contacts","onRemoveContact","length","map","contact","ContactItem","key","onClick","style","margin","fontSize","color","App","filter","addContact","prevState","existedContacts","cont","newName","newNumber","includes","setLocalStorage","localStorage","setItem","JSON","stringify","removeContact","changeFilter","getVisibleContacts","toLowerCase","persistedContacts","getItem","parse","prevProps","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e552b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactItem\":\"ContactList_ContactItem__2TMaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__LqS2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"ContactFormButton\":\"ContactForm_ContactFormButton__LJvL1\"};","import React from \"react\";\nimport styles from \"./Section.module.css\";\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={styles.Section}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport \"../../index.css\";\nimport NumberFormat from \"react-number-format\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    // CREATE CONTACT\n    this.props.onSubmit({\n      id: uuidv4(),\n      name: name,\n      number: number,\n    });\n\n    // CLEAR INPUT\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.ContactForm} onSubmit={this.handleSubmit}>\n        <label>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n            placeholder=\"Name...\"\n            autoFocus\n          />\n        </label>\n\n        <label>\n          <p>Number</p>\n          <NumberFormat\n            format=\"(###) ###-####\"\n            mask=\"\"\n            name=\"number\"\n            placeholder=\"Phone Number...\"\n            onChange={this.handleChange}\n            value={this.state.number}\n          />\n        </label>\n\n        <button className=\"Button\" type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target)}\n        placeholder=\"Search contact...\"\n      />\n    </label>\n  );\n}\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul className={styles.ContactList}>\n      {contacts.length > 0 ? (\n        contacts.map((contact) => (\n          <li className={styles.ContactItem} key={contact.id}>\n            {contact.name}: {contact.number}\n            <button\n              id={contact.id}\n              className=\"Button\"\n              type=\"submit\"\n              onClick={onRemoveContact}\n            >\n              Remove Contact\n            </button>\n          </li>\n        ))\n      ) : (\n        <p style={{ margin: 0, fontSize: 14, color: \"grey\" }}>No match...</p>\n      )}\n    </ul>\n  );\n}\n","import React, { Component } from \"react\";\nimport Section from \"./Section/Section\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    persistedContacts &&\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      this.setLocalStorage();\n    }\n  }\n\n  addContact = (contact) => {\n    this.setState((prevState) => {\n      const existedContacts = prevState.contacts.map((cont) => cont.name);\n      const newName = contact.name;\n      const newNumber = contact.number;\n      // PREVENT SAVING SAME CONTACT\n      return {\n        contacts:\n          existedContacts.includes(newName) ||\n          newName === \"\" ||\n          newNumber === \"\"\n            ? prevState.contacts\n            : [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  setLocalStorage = () => {\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  };\n\n  removeContact = (e) => {\n    this.setState({\n      contacts: this.state.contacts.filter(\n        (contact) => contact.id !== e.target.id\n      ),\n    });\n  };\n\n  changeFilter = (e) => {\n    const { name, value } = e;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return (\n      contacts.length > 0 &&\n      contacts.filter(\n        (contact) =>\n          contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n          contact.number.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter onChangeFilter={this.changeFilter} value={filter} />\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}